{"version":3,"sources":["styles/Navigation.ts","components/NavigationBar.tsx","pages/Home.tsx","pages/Projects.tsx","pages/Reviews.tsx","styles/Form.ts","components/ContactForm.tsx","pages/Contact.tsx","styles/Global.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavigationContainer","styled","nav","NavigationBar","Navbar","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Home","Projects","Reviews","Container","div","MyForm","form","ContactForm","useState","status","initialValues","name","email","phone","message","onSubmit","data","console","log","values","handleChange","handleSubmit","Form","Group","controlId","Label","Control","type","value","onChange","placeholder","Button","Contact","GlobalStyle","createGlobalStyle","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a0966a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const NavigationContainer = styled.nav`\n  background-color: rgb(255, 254, 252);\n  display: border-box;\n  padding: 50px;\n  \n  a.nav-link {\n    color: green\n  }\n`;","import React, { FC } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { NavigationContainer } from \"../styles/Navigation\";\n\nexport const NavigationBar: FC = () => {\n  return (\n    <NavigationContainer>\n    <Navbar>\n      <Navbar.Brand href=\"/obrien-home-improvement\">O'Brien Home Improvement</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/obrien-home-improvement\">Home</Nav.Link>\n          <Nav.Link href=\"/obrien-home-improvement/projects\">Projects</Nav.Link>\n          <Nav.Link href=\"/obrien-home-improvement/reviews\">Reviews</Nav.Link>\n          <Nav.Link href=\"/obrien-home-improvement/contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    </NavigationContainer>\n  );\n};","import React, { FC } from \"react\";\n\nexport const Home: FC = () => {\n  return (\n    <>\n    <p>Home / About</p>\n    </>\n  );\n};","import React, { FC } from \"react\";\n\nexport const Projects: FC = () => {\n  return (\n    <>\n    <p>Projects</p>\n    </>\n  );\n};","import React, { FC } from \"react\";\n\nexport const Reviews: FC = () => {\n  return (\n    <>\n    <p>Reviews</p>\n    </>\n  );\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background: lightgray;\n  height: auto;\n  \n`;\n\nexport const MyForm = styled.form`\n  width: 90%\n`;","import React, { FC, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { Container, MyForm } from \"../styles/Form\";\n\n\nexport const ContactForm: FC = () => {\n\n  const [status, setStatus] = useState('');\n  \n  return (\n    <>\n    <Container>\n    <Formik \n      initialValues={{\n      name: '',\n      email: '',\n      phone: '',\n      message: '',\n      }}\n      onSubmit={data => {\n        console.log(data)\n      }}\n    >\n      {({values, handleChange, handleSubmit}) => (\n        <MyForm onSubmit={handleSubmit} className=\"mx-auto\">\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name:</Form.Label>\n            <Form.Control \n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              placeholder=\"Name\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email Address:</Form.Label>\n            <Form.Control \n              type=\"email\" \n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              placeholder=\"Enter email\" \n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhone\">\n            <Form.Label>Phone Number:</Form.Label>\n            <Form.Control \n              type=\"phone\" \n              name=\"phone\"\n              value={values.phone}\n              onChange={handleChange}\n              placeholder=\"Password\" \n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhone\">\n            <Form.Label>Message:</Form.Label>\n            <Form.Control \n              type=\"message\" \n              name=\"message\"\n              value={values.message}\n              onChange={handleChange}\n              placeholder=\"Please provide a description of work\" \n            />\n          </Form.Group>\n          {/* <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button> */}\n          {status === \"SUCCESS\" ? <p>Thank you!</p> : <Button type=\"submit\" className=\"btn btn-primary form\">Send</Button>}\n          {status === \"ERROR\" && <p>There was an error, please submit the form again.</p>}\n        </MyForm>\n      )}\n    </Formik>\n    </Container>\n    </>\n  )\n};\n\n\n","import React, { FC } from \"react\";\nimport { ContactForm } from \"../components/ContactForm\";\n\nexport const Contact: FC = () => {\n  return (\n    <>\n    <ContactForm />\n    </>\n  );\n};","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: rgb(255, 254, 252);\n    background-image: url(\"https://images.pexels.com/photos/164005/pexels-photo-164005.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\");\n \n    \n  }\n\n  body::after {\n    content: \"\";\n    display: block;\n    opacity: .3;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: #F7F3F5;\n  }\n\n  body * {\n    position: relative;\n    z-index: 2;\n  }\n\n`;","import React, { FC } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar\";\nimport { Home } from \"./pages/Home\";\nimport { Projects } from \"./pages/Projects\";\nimport { Reviews } from \"./pages/Reviews\";\nimport { Contact } from \"./pages/Contact\";\nimport { GlobalStyle } from \"./styles/Global\";\n\n\nexport const App: FC = () => {\n  return (\n    <>\n    <GlobalStyle />\n    <NavigationBar />\n    <Router> \n      <div>\n        <Switch>\n          <Route exact path=\"/obrien-home-improvement\" component={Home} />\n          <Route exact path=\"/obrien-home-improvement/projects\" component={Projects} />\n          <Route exact path=\"/obrien-home-improvement/reviews\" component={Reviews} />\n          <Route exact path=\"/obrien-home-improvement/contact\" component={Contact} />\n        </Switch>\n      </div>\n    </Router>\n    <p>hello</p>\n    </>\n  );\n};\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}