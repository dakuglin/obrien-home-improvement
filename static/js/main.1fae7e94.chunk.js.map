{"version":3,"sources":["styles/Navigation.ts","components/NavigationBar.tsx","pages/Home.tsx","pages/Projects.tsx","pages/Reviews.tsx","components/ContactForm.tsx","config.ts","pages/Contact.tsx","styles/Global.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavigationContainer","styled","nav","NavigationBar","Navbar","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Home","Projects","Reviews","ContactForm","useState","setStatus","handleStatusResponse","ok","message","initialValues","name","email","phone","onSubmit","values","actions","console","log","axios","method","url","data","then","response","setSubmitting","resetForm","catch","error","htmlFor","type","Button","Contact","GlobalStyle","createGlobalStyle","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fae7e94.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const NavigationContainer = styled.nav`\n  background-color: rgb(255, 254, 252);\n  display: border-box;\n  padding: 50px;\n  \n  a.nav-link {\n    color: green\n  }\n`;","import React, { FC } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { NavigationContainer } from \"../styles/Navigation\";\n\nexport const NavigationBar: FC = () => {\n  return (\n    <NavigationContainer>\n    <Navbar>\n      <Navbar.Brand href=\"/obrien-home-improvement\">O'Brien Home Improvement</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/obrien-home-improvement\">Home</Nav.Link>\n          <Nav.Link href=\"/projects\">Projects</Nav.Link>\n          <Nav.Link href=\"/reviews\">Reviews</Nav.Link>\n          <Nav.Link href=\"/contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    </NavigationContainer>\n  );\n};","import React, { FC } from \"react\";\n\nexport const Home: FC = () => {\n  return (\n    <>\n    <p>Home / About</p>\n    </>\n  );\n};","import React, { FC } from \"react\";\n\nexport const Projects: FC = () => {\n  return (\n    <>\n    <p>Projects</p>\n    </>\n  );\n};","import React, { FC } from \"react\";\n\nexport const Reviews: FC = () => {\n  return (\n    <>\n    <p>Reviews</p>\n    </>\n  );\n};","// import React, { FC, useState } from \"react\";\n// import axios from \"axios\";\n// import { Formik, Field, ErrorMessage } from \"formik\";\n\n\n\n// interface FormValues {\n//   name: string;\n//   email: string;\n//   phone: string;\n//   message: string;\n// }\n\n// export const ContactForm: FC<{}> = () => {\n\n//   const [status, setStatus] = useState('');\n\n//   //  onSubmit{ (values, actions) => {\n//   //   axios({\n//   //     method: \"POST\",\n//   //     url: process.env.FORM_URL,\n//   //     data: values,\n//   //   })\n//     // .then(response => {\n//     //   actions.setSubmitting(false);\n//     //   actions.resetForm();\n//     //   // handleStatusResponseResponse(true, \"Thank you!\")\n//     // })\n//   // }\n//   const initialValues: FormValues = {\n//     name: '',\n//     email: '',\n//     phone: '',\n//     message: '',\n//   };\n\n//   return (\n//     <>\n//     <Container>\n// \n\n//         <MyForm onSubmit={handleSubmit} className=\"mx-auto\">\n//           <Form.Group controlId=\"formName\">\n//             <label>Name:</label>\n//             <Form.Control \n//               type=\"text\"\n//               name=\"name\"\n//               value={values.name}\n//               onChange={handleChange}\n//               placeholder=\"Name\"\n//             />\n//           </Form.Group>\n//           <Form.Group controlId=\"formEmail\">\n//             <label>Email Address:</label>\n//             <Form.Control \n//               type=\"email\" \n//               name=\"email\"\n//               value={values.email}\n//               onChange={handleChange}\n//               placeholder=\"Enter email\" \n//             />\n//           </Form.Group>\n//           <Form.Group controlId=\"formPhone\">\n//             <label>Phone Number:</label>\n//             <Form.Control \n//               type=\"phone\" \n//               name=\"phone\"\n//               value={values.phone}\n//               onChange={handleChange}\n//               placeholder=\"Password\" \n//             />\n//           </Form.Group>\n//           <Form.Group controlId=\"formPhone\">\n//             <label>Message:</label>\n//             <Form.Control \n//               type=\"message\" \n//               name=\"message\"\n//               value={values.message}\n//               onChange={handleChange}\n//               placeholder=\"Please provide a description of work\" \n//             />\n//           </Form.Group>\n//           {/* <Button variant=\"primary\" type=\"submit\">\n//             Submit\n//           </Button> */}\n//           {status === \"SUCCESS\" ? <p>Thank you!</p> : <Button type=\"submit\" className=\"btn btn-primary form\">Send</Button>}\n//           {status === \"ERROR\" && <p>There was an error, please submit the form again.</p>}\n//         </MyForm>\n\n//     </Container>\n//     </>\n//   )\n// };\n\n\nimport React, { FC, useState } from 'react';\nimport { Button } from \"react-bootstrap\";\n// import label from 'react-bootstrap/label';\n// import FormGroup from 'react-bootstrap/FormGroup';\n// import { Container, FormWrapper } from \"../styles/Form\";\n\nimport {\n  Formik,\n  Form,\n  Field,\n} from 'formik';\nimport axios from 'axios';\nimport { FORM_URL } from \"../config\";\n \ninterface FormValues {\n  name: string;\n  email: string;\n  phone: string;\n  message: string;\n}\n\ninterface Errors {\n  ok: boolean\n  message: string;\n}\n \nexport const ContactForm: FC<{}> = () => {\n\n  const [status, setStatus] = useState<Errors>();\n\n  const handleStatusResponse = ( ok: boolean, message: string) => {\n    setStatus({ ok, message });\n  };\n\n  const initialValues: FormValues = {\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n  };\n\n  return (\n    <div>\n      <h1>Contact Us</h1>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          console.log({ values, actions });\n          axios({\n            method: \"POST\",\n            url: FORM_URL,\n            data: values,\n          })\n         .then(response => {\n          console.log(response)\n          actions.setSubmitting(false);\n          actions.resetForm();\n          handleStatusResponse(true, \"Thank you!\");\n         })\n         .catch(error => {\n           console.log(error)\n           actions.setSubmitting(false);\n           handleStatusResponse(false, error.response.data.error)\n         })\n        }}\n      >\n        <Form>\n          <div>\n            <label htmlFor=\"name\">Name:</label>\n            <Field \n              type=\"text\" \n              name=\"name\" \n              className=\"form-control\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email:</label>\n            <Field \n              type=\"email\" \n              name=\"email\"\n              className=\"form-control\" \n            />\n          </div>\n          <div>\n            <label htmlFor=\"phone\">Phone Number:</label>\n            <Field \n              type=\"phone\"\n              name=\"phone\" \n              className=\"form-control\"\n             />\n          </div>\n          <div>\n            <label htmlFor=\"message\">Message:</label>\n            <Field \n              type=\"text\" \n              name=\"message\" \n              className=\"form-control\"\n            />\n          </div> \n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\n\n","export const FORM_URL = \"https://formspree.io/f/mgeprlgk\";","import React, { FC } from \"react\";\nimport { ContactForm } from \"../components/ContactForm\";\n\nexport const Contact: FC = () => {\n  return (\n    <>\n    <ContactForm />\n    </>\n  );\n};","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: rgb(255, 254, 252);\n    background-image: url(\"https://images.pexels.com/photos/164005/pexels-photo-164005.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\");\n \n    \n  }\n\n  body::after {\n    content: \"\";\n    display: block;\n    opacity: .3;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: #F7F3F5;\n  }\n\n  body * {\n    position: relative;\n    z-index: 2;\n  }\n\n`;","import React, { FC } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar\";\nimport { Home } from \"./pages/Home\";\nimport { Projects } from \"./pages/Projects\";\nimport { Reviews } from \"./pages/Reviews\";\nimport { Contact } from \"./pages/Contact\";\nimport { GlobalStyle } from \"./styles/Global\";\n\n\nexport const App: FC = () => {\n  return (\n    <>\n    <GlobalStyle />\n    <NavigationBar />\n    <Router> \n      <div>\n        <Switch>\n          <Route exact path=\"/obrien-home-improvement\" component={Home} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact path=\"/reviews\" component={Reviews} />\n          <Route exact path=\"/contact\" component={Contact} />\n        </Switch>\n      </div>\n    </Router>\n    </>\n  );\n};\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}